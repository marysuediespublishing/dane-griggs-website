---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import BookCard from '../components/ui/BookCard.tsx';
import { SITE_TITLE } from '../consts';
import { getCollection } from 'astro:content';

// Get search query from URL params
const url = Astro.url;
const searchQuery = url.searchParams.get('q') || '';

// Get all content for searching
const books = await getCollection('books');
const series = await getCollection('series');
const blog = await getCollection('blog');

// Simple search implementation (in a real app, you'd use Fuse.js or similar)
const searchBooks = (query: string) => {
  if (!query) return [];
  
  const lowerQuery = query.toLowerCase();
  return books.filter(book => 
    book.data.title.toLowerCase().includes(lowerQuery) ||
    book.data.description.toLowerCase().includes(lowerQuery) ||
    book.data.author.toLowerCase().includes(lowerQuery) ||
    (book.data.series && book.data.series.toLowerCase().includes(lowerQuery)) ||
    (book.data.alienSpecies && book.data.alienSpecies.some(species => 
      species.toLowerCase().includes(lowerQuery)
    )) ||
    (book.data.genres && book.data.genres.some(genre => 
      genre.toLowerCase().includes(lowerQuery)
    ))
  );
};

const searchSeries = (query: string) => {
  if (!query) return [];
  
  const lowerQuery = query.toLowerCase();
  return series.filter(s => 
    s.data.title.toLowerCase().includes(lowerQuery) ||
    s.data.description.toLowerCase().includes(lowerQuery) ||
    (s.data.alienSpecies && s.data.alienSpecies.some(species => 
      species.toLowerCase().includes(lowerQuery)
    ))
  );
};

const searchBlogPosts = (query: string) => {
  if (!query) return [];
  
  const lowerQuery = query.toLowerCase();
  return blog.filter(post => 
    post.data.title.toLowerCase().includes(lowerQuery) ||
    post.data.description.toLowerCase().includes(lowerQuery) ||
    (post.data.tags && post.data.tags.some(tag => 
      tag.toLowerCase().includes(lowerQuery)
    ))
  );
};

// Perform searches
const foundBooks = searchBooks(searchQuery);
const foundSeries = searchSeries(searchQuery);
const foundBlogPosts = searchBlogPosts(searchQuery);

const totalResults = foundBooks.length + foundSeries.length + foundBlogPosts.length;

// Popular searches for empty state
const popularSearches = [
  'alien romance',
  'cerastean',
  'space station',
  'medical romance',
  'Saving Ceraste',
  'competent heroine'
];
---

<Layout title={`Search${searchQuery ? ` - ${searchQuery}` : ''} - ${SITE_TITLE}`}>
  <Header />
  
  <main class="min-h-screen bg-bg-primary">
    <!-- Search Header -->
    <section class="py-12 bg-gradient-to-br from-deep-space-navy via-nebula-purple to-deep-space-navy">
      <div class="container mx-auto px-4">
        <div class="max-w-4xl mx-auto text-center">
          <h1 class="text-3xl md:text-4xl font-primary font-bold text-solar-white mb-6">
            {searchQuery ? (
              <>Search Results for "<span class="text-stellar-gold">{searchQuery}</span>"</>
            ) : (
              <>Search <span class="bg-gradient-aurora bg-clip-text text-transparent">My Books</span></>
            )}
          </h1>
          
          {searchQuery && (
            <p class="text-lg text-solar-white/80 mb-6">
              Found {totalResults} result{totalResults !== 1 ? 's' : ''} matching your search
            </p>
          )}
          
          <!-- Search Form -->
          <form method="get" action="/search" class="max-w-2xl mx-auto">
            <div class="relative">
              <input
                type="text"
                name="q"
                value={searchQuery}
                placeholder="Search books, series, alien species..."
                class="w-full bg-solar-white/10 backdrop-blur-sm border-2 border-cosmic-rose/30 
                       rounded-lg px-6 py-4 text-solar-white placeholder-solar-white/60 text-lg
                       focus:outline-none focus:border-cosmic-rose focus:shadow-cosmic
                       transition-all duration-200"
                aria-label="Search"
              />
              <button 
                type="submit"
                class="absolute right-3 top-1/2 transform -translate-y-1/2 text-solar-white/60 hover:text-solar-white transition-colors"
              >
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </button>
            </div>
          </form>
        </div>
      </div>
    </section>

    <div class="container mx-auto px-4 py-12">
      {!searchQuery && (
        <!-- Empty State / Search Landing -->
        <div class="text-center">
          <div class="max-w-2xl mx-auto mb-12">
            <h2 class="text-2xl font-bold text-deep-space-navy mb-4">
              Discover Your Next Favorite Book
            </h2>
            <p class="text-gray-600 mb-8">
              Search through my entire collection of alien romance novels, series, and blog posts. Find books by title, series, alien species, or themes.
            </p>
          </div>

          <!-- Popular Searches -->
          <div class="mb-12">
            <h3 class="text-lg font-semibold text-deep-space-navy mb-4">Popular Searches</h3>
            <div class="flex flex-wrap justify-center gap-3">
              {popularSearches.map((search) => (
                <a 
                  href={`/search?q=${encodeURIComponent(search)}`}
                  class="bg-white border border-gray-200 rounded-lg px-4 py-2 text-sm text-gray-700 hover:border-cosmic-rose hover:text-cosmic-rose transition-colors"
                >
                  {search}
                </a>
              ))}
            </div>
          </div>

          <!-- Featured Content -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div class="text-center">
              <div class="text-4xl mb-4">üìö</div>
              <h3 class="text-lg font-semibold text-deep-space-navy mb-2">
                {books.length} Books
              </h3>
              <p class="text-gray-600 text-sm">
                Complete alien romance collection
              </p>
            </div>
            <div class="text-center">
              <div class="text-4xl mb-4">üåå</div>
              <h3 class="text-lg font-semibold text-deep-space-navy mb-2">
                {series.length} Series
              </h3>
              <p class="text-gray-600 text-sm">
                Interconnected story universes
              </p>
            </div>
            <div class="text-center">
              <div class="text-4xl mb-4">‚úçÔ∏è</div>
              <h3 class="text-lg font-semibold text-deep-space-navy mb-2">
                {blog.length} Blog Posts
              </h3>
              <p class="text-gray-600 text-sm">
                Writing insights and world-building
              </p>
            </div>
          </div>
        </div>
      )}

      {searchQuery && totalResults === 0 && (
        <!-- No Results -->
        <div class="text-center py-12">
          <div class="text-6xl mb-6">üî≠</div>
          <h2 class="text-2xl font-bold text-deep-space-navy mb-4">
            No Results Found
          </h2>
          <p class="text-gray-600 mb-8 max-w-md mx-auto">
            We couldn't find anything matching "{searchQuery}". Try searching for something else or browse our popular categories.
          </p>
          
          <!-- Suggestions -->
          <div class="mb-8">
            <h3 class="text-lg font-semibold text-deep-space-navy mb-4">Try these instead:</h3>
            <div class="flex flex-wrap justify-center gap-3">
              {popularSearches.slice(0, 4).map((search) => (
                <a 
                  href={`/search?q=${encodeURIComponent(search)}`}
                  class="btn btn-outline btn-sm"
                >
                  {search}
                </a>
              ))}
            </div>
          </div>
          
          <div class="space-y-4">
            <a href="/books" class="btn btn-primary btn-lg">Browse All Books</a>
            <div>
              <a href="/series" class="btn btn-secondary">Explore Series</a>
            </div>
          </div>
        </div>
      )}

      {searchQuery && totalResults > 0 && (
        <!-- Search Results -->
        <div class="space-y-12">
          <!-- Books Results -->
          {foundBooks.length > 0 && (
            <section>
              <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl font-bold text-deep-space-navy">
                  Books ({foundBooks.length})
                </h2>
                {foundBooks.length > 8 && (
                  <button class="text-cosmic-rose hover:text-cosmic-rose/80 font-medium">
                    View All ‚Üí
                  </button>
                )}
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                {foundBooks.slice(0, 8).map((book) => (
                  <BookCard 
                    book={book}
                    variant="standard"
                    client:load
                  />
                ))}
              </div>
            </section>
          )}

          <!-- Series Results -->
          {foundSeries.length > 0 && (
            <section>
              <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl font-bold text-deep-space-navy">
                  Series ({foundSeries.length})
                </h2>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {foundSeries.map((seriesItem) => (
                  <div class="bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-shadow duration-300">
                    <div class="text-center">
                      <h3 class="text-xl font-bold text-deep-space-navy mb-2">
                        {seriesItem.data.title}
                      </h3>
                      <p class="text-gray-600 mb-4 text-sm">
                        {seriesItem.data.description}
                      </p>
                      
                      <div class="flex justify-center items-center space-x-4 text-sm text-gray-500 mb-4">
                        <span>{seriesItem.data.bookCount} Books</span>
                        <span>‚Ä¢</span>
                        <span class="capitalize">{seriesItem.data.completionStatus}</span>
                      </div>
                      
                      <a 
                        href={`/series/${seriesItem.slug}`}
                        class="btn btn-secondary btn-sm w-full"
                      >
                        Explore Series
                      </a>
                    </div>
                  </div>
                ))}
              </div>
            </section>
          )}

          <!-- Blog Posts Results -->
          {foundBlogPosts.length > 0 && (
            <section>
              <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl font-bold text-deep-space-navy">
                  Blog Posts ({foundBlogPosts.length})
                </h2>
              </div>
              
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {foundBlogPosts.map((post) => (
                  <article class="bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
                    <div class="p-6">
                      <h3 class="text-lg font-bold text-deep-space-navy mb-2 hover:text-cosmic-rose transition-colors">
                        <a href={`/blog/${post.slug}`}>
                          {post.data.title}
                        </a>
                      </h3>
                      <p class="text-gray-600 text-sm mb-3">
                        {post.data.description}
                      </p>
                      <div class="flex items-center justify-between text-sm text-gray-500">
                        <time datetime={post.data.pubDate.toISOString()}>
                          {post.data.pubDate.toLocaleDateString('en-US', {
                            year: 'numeric',
                            month: 'long',
                            day: 'numeric'
                          })}
                        </time>
                        {post.data.tags && post.data.tags.length > 0 && (
                          <span class="bg-gray-100 text-gray-600 px-2 py-1 rounded text-xs">
                            {post.data.tags[0]}
                          </span>
                        )}
                      </div>
                    </div>
                  </article>
                ))}
              </div>
            </section>
          )}

          <!-- Related Searches -->
          <section class="bg-gray-50 rounded-xl p-8">
            <h3 class="text-lg font-semibold text-deep-space-navy mb-4 text-center">
              Related Searches
            </h3>
            <div class="flex flex-wrap justify-center gap-3">
              {popularSearches.filter(search => 
                search.toLowerCase() !== searchQuery.toLowerCase()
              ).slice(0, 6).map((search) => (
                <a 
                  href={`/search?q=${encodeURIComponent(search)}`}
                  class="bg-white border border-gray-200 rounded-lg px-3 py-1 text-sm text-gray-700 hover:border-cosmic-rose hover:text-cosmic-rose transition-colors"
                >
                  {search}
                </a>
              ))}
            </div>
          </section>
        </div>
      )}
    </div>
  </main>

  <Footer />
</Layout>