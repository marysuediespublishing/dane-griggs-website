---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { getCollection } from 'astro:content';
import StarfieldBackground from '../components/ui/StarfieldBackground.tsx';

// Get all characters, books, and series for statistics
const allCharacters = await getCollection('characters');
const allBooks = await getCollection('books');
const allSeries = await getCollection('series');

// Function to format character name for display
const formatCharacterName = (name: string): string => {
  return name; // Characters already have proper formatted names
};

// Function to format species name for display
const formatSpeciesName = (species: string): string => {
  if (!species) return 'Unknown';
  
  // Handle special cases
  if (species.toLowerCase() === 'human') return 'Human';
  if (species.toLowerCase().includes('slavic')) return 'Slavic Gods';
  
  // For other species, capitalize each word
  return species.split('-').map(word => 
    word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()
  ).join(' ');
};

// Function to determine character's primary series
const getCharacterSeries = (character) => {
  if (!character.data.books || character.data.books.length === 0) {
    return null; // No series if no main book appearances
  }
  
  // Get the first main book to determine series
  const firstBookId = character.data.books[0];
  const firstBook = allBooks.find(book => book.id === firstBookId);
  
  return firstBook?.data.series || null;
};

// Add statistics and series info to each character
const charactersWithStats = allCharacters.map(character => {
  // Count main book appearances
  const bookCount = character.data.books ? character.data.books.length : 0;
  
  // Count cameo appearances
  const cameoCount = character.data.cameos ? character.data.cameos.length : 0;
  
  // Total appearances
  const totalAppearances = bookCount + cameoCount;
  
  // Get primary series
  const primarySeries = getCharacterSeries(character);
  
  return {
    ...character,
    bookCount,
    cameoCount,
    totalAppearances,
    primarySeries,
    displayName: formatCharacterName(character.data.name),
    speciesName: formatSpeciesName(character.data.species || '')
  };
});

// Group characters by series
const seriesGroups = {
  "Koko's Harbor for Wayward Fated Mates": charactersWithStats.filter(char => 
    char.primarySeries === "Koko's Harbor for Wayward Fated Mates"
  ).sort((a, b) => {
    // Sort alphabetically by display name
    return a.displayName.localeCompare(b.displayName);
  }),
  
  "Saving Ceraste": charactersWithStats.filter(char => 
    char.primarySeries === "Saving Ceraste"
  ).sort((a, b) => {
    // Sort alphabetically by display name
    return a.displayName.localeCompare(b.displayName);
  }),
  
  "Other Characters": charactersWithStats.filter(char => 
    !char.primarySeries || (
      char.primarySeries !== "Koko's Harbor for Wayward Fated Mates" && 
      char.primarySeries !== "Saving Ceraste"
    )
  ).sort((a, b) => {
    // Sort alphabetically by display name
    return a.displayName.localeCompare(b.displayName);
  })
};

// Define series order and information
const seriesOrder = [
  {
    key: "Koko's Harbor for Wayward Fated Mates",
    title: "Koko's Harbor for Wayward Fated Mates",
    description: "A magical small town where supernatural beings and their human mates find love and sanctuary."
  },
  {
    key: "Saving Ceraste", 
    title: "Saving Ceraste",
    description: "Epic space romance featuring the Cerastean alien species and their human brides."
  },
  {
    key: "Other Characters",
    title: "Other Characters", 
    description: "Supporting characters and those from standalone works."
  }
];
---

<Layout title="Character Guide - Dane Griggs">
  <Header />
  
  <!-- Starfield Background -->
  <StarfieldBackground client:load />
  
  <main class="relative z-10">
    <!-- Hero Section -->
    <section class="relative py-20 bg-gradient-to-br from-deep-space-navy via-nebula-purple to-deep-space-navy overflow-hidden">
      <div class="absolute inset-0 bg-starfield opacity-30 animate-starfield"></div>
      <div class="absolute inset-0 bg-gradient-to-t from-deep-space-navy/50 to-transparent"></div>
      <div class="container mx-auto px-4 relative z-10">
        <div class="max-w-5xl mx-auto text-center">
          <h1 class="text-5xl md:text-7xl font-primary font-bold text-solar-white mb-6">
            <span class="bg-gradient-aurora bg-clip-text text-transparent">
              Character Guide
            </span>
          </h1>
          <p class="text-2xl text-stellar-gold font-medium mb-4">
            Meet the heroes and heroines of the cosmos
          </p>
          <p class="text-lg text-solar-white/90 max-w-3xl mx-auto leading-relaxed">
            From brave humans to powerful aliens, discover the unforgettable characters who bring Dane Griggs' romantic universe to life. Each one has their own story, struggles, and passionate journey to love.
          </p>
        </div>
      </div>
    </section>

    <!-- Characters by Series -->
    <section class="py-20 bg-bg-secondary">
      <div class="container mx-auto px-4">
        <div class="max-w-7xl mx-auto space-y-16">
          {seriesOrder.map((seriesInfo) => {
            const characters = seriesGroups[seriesInfo.key];
            
            // Only show section if there are characters
            if (!characters || characters.length === 0) return null;
            
            return (
              <div class="space-y-8">
                <!-- Series Header -->
                <div class="text-center">
                  <h2 class="text-3xl md:text-4xl font-primary font-bold text-deep-space-navy mb-4">
                    {seriesInfo.title}
                  </h2>
                  <p class="text-lg text-gray-600 max-w-3xl mx-auto">
                    {seriesInfo.description}
                  </p>
                </div>
                
                <!-- Characters Grid for this Series -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                  {characters.map((character) => (
                    <a 
                      href={`/characters/${character.id}`}
                      class="group block bg-white rounded-xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-300 hover:-translate-y-2"
                    >
                      <!-- Character Image -->
                      <div class="relative aspect-[4/3] overflow-hidden">
                        {character.data.image ? (
                          <img 
                            src={character.data.image} 
                            alt={`${character.displayName} character artwork`}
                            class="w-full h-full object-cover object-top group-hover:scale-110 transition-transform duration-300"
                          />
                        ) : (
                          <div class="w-full h-full bg-gradient-cosmic flex items-center justify-center">
                            <div class="text-center text-solar-white">
                              <div class="text-6xl mb-2">ðŸ‘¤</div>
                              <div class="text-sm font-medium">{character.displayName}</div>
                            </div>
                          </div>
                        )}
                        
                        <!-- Species Badge -->
                        {character.data.species && (
                          <div class="absolute top-4 left-4">
                            <span class="badge badge-primary text-xs">
                              {character.speciesName}
                            </span>
                          </div>
                        )}
                      </div>
                      
                      <!-- Character Info -->
                      <div class="p-6">
                        <h3 class="text-xl font-primary font-bold text-deep-space-navy mb-2 group-hover:text-cosmic-rose transition-colors">
                          {character.displayName}
                        </h3>
                        
                        {character.data.description && (
                          <p class="text-gray-600 text-sm leading-relaxed mb-4 line-clamp-3">
                            {character.data.description}
                          </p>
                        )}
                        
                        <div class="flex items-center justify-between">
                          <div class="flex flex-wrap gap-2 text-xs">
                            {character.bookCount > 0 && (
                              <span class="flex items-center space-x-1">
                                <svg class="w-4 h-4 text-cosmic-rose" fill="currentColor" viewBox="0 0 20 20">
                                  <path d="M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 715.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V4.804z"></path>
                                </svg>
                                <span>{character.bookCount} {character.bookCount === 1 ? 'book' : 'books'}</span>
                              </span>
                            )}
                            
                            {character.cameoCount > 0 && (
                              <span class="flex items-center space-x-1">
                                <svg class="w-4 h-4 text-stellar-gold" fill="currentColor" viewBox="0 0 20 20">
                                  <path d="M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z"></path>
                                </svg>
                                <span>{character.cameoCount} cameo{character.cameoCount === 1 ? '' : 's'}</span>
                              </span>
                            )}
                          </div>
                          
                          <div class="text-cosmic-rose font-medium group-hover:text-stellar-gold transition-colors">
                            Learn More â†’
                          </div>
                        </div>
                      </div>
                    </a>
                  ))}
                </div>
              </div>
            );
          })}
          
          {Object.values(seriesGroups).every(group => group.length === 0) && (
            <div class="text-center py-16">
              <div class="text-6xl mb-4">ðŸŒŒ</div>
              <h3 class="text-2xl font-bold text-deep-space-navy mb-2">No Characters Found</h3>
              <p class="text-gray-600">Character profiles are being added soon.</p>
            </div>
          )}
        </div>
      </div>
    </section>

    <!-- Browse More CTA -->
    <section class="py-16 bg-gradient-cosmic text-solar-white">
      <div class="container mx-auto px-4 text-center">
        <div class="max-w-3xl mx-auto space-y-8">
          <h2 class="text-3xl md:text-4xl font-primary font-bold">
            Explore Their Stories
          </h2>
          <p class="text-lg text-solar-white/90">
            Discover the books and series where these beloved characters find love across the stars
          </p>
          <div class="flex flex-col sm:flex-row gap-4 justify-center">
            <a href="/series" class="btn btn-secondary btn-lg px-8 py-4">
              Browse Series
            </a>
            <a href="/books" class="btn btn-outline-light btn-lg px-8 py-4">
              View All Books
            </a>
            <a href="/species" class="btn btn-outline-light btn-lg px-8 py-4">
              Species Guide
            </a>
          </div>
        </div>
      </div>
    </section>
  </main>
  
  <Footer />
</Layout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>