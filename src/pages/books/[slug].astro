---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import BookCard from '../../components/ui/BookCard.tsx';
import { SITE_TITLE } from '../../consts';
import { getCollection, type CollectionEntry, render } from 'astro:content';
import { Image, getImage } from 'astro:assets';

// Helper function to map series names to slugs
function getSeriesSlug(seriesName: string): string | null {
  const seriesMap: Record<string, string> = {
    'Saving Ceraste': 'saving-ceraste',
    'Koko\'s Harbor for Wayward Fated Mates': 'kokos-harbor'
  };
  return seriesMap[seriesName] || null;
}

// Helper functions for name resolution
async function getSpeciesName(slug: string): Promise<string> {
  try {
    const speciesCollection = await getCollection('species');
    const species = speciesCollection.find(s => s.data.slug === slug);
    return species?.data.name || formatSlugToName(slug);
  } catch (error) {
    return formatSlugToName(slug);
  }
}

async function getLocationName(slug: string): Promise<string> {
  try {
    const locationsCollection = await getCollection('locations');
    const location = locationsCollection.find(l => l.data.slug === slug);
    return location?.data.name || formatSlugToName(slug);
  } catch (error) {
    return formatSlugToName(slug);
  }
}

function formatSlugToName(slug: string): string {
  return slug.split('-').map(word => 
    word.charAt(0).toUpperCase() + word.slice(1)
  ).join(' ');
}

function formatGenreName(genre: string): string {
  // Genres are already in proper format, just ensure consistent capitalization
  return genre.split(' ').map(word => 
    word.charAt(0).toUpperCase() + word.slice(1)
  ).join(' ');
}

// Get the slug from URL params
const { slug } = Astro.params;

// Fetch all books and find the one matching the slug
const allBooks = await getCollection('books');
const book = allBooks.find(b => b.id === slug);

// Handle book not found - return 404
if (!book) {
  return Astro.redirect('/404');
}
const { Content } = await render(book);
// Add slug property for consistency
const bookWithSlug = { ...book, slug: book.id };

// Process all books for related recommendations, process images
const allBooksProcessed = await Promise.all(
	allBooks.map(async book => {
		try {
			const coverImage = book.data.cover ? await getImage({
				src: book.data.cover,
				width: 300,
				height: 450,
				format: 'webp'
			}) : null;
			
			return {
				...book,
				slug: book.id,
				coverUrl: coverImage?.src
			};
		} catch (error) {
			console.warn(`Failed to process image for book ${book.id}:`, error);
			return {
				...book,
				slug: book.id,
				coverUrl: null
			};
		}
	})
);
const allSeries = await getCollection('series');

// Get books from the same series
const seriesBooks = book.data.series 
  ? allBooksProcessed.filter(b => b.data.series === book.data.series && b.id !== book.id)
  : [];

// Get books with similar alien species
const similarBooks = allBooksProcessed.filter(b => {
  const currentSpecies = book.data.species || book.data.alienSpecies || [];
  const bookSpecies = b.data.species || b.data.alienSpecies || [];
  return b.id !== book.id &&
    bookSpecies.some(species => currentSpecies.includes(species));
}).slice(0, 4);

// Get other books by same author (if different than current book)
const otherBooks = allBooksProcessed.filter(b => 
  b.id !== book.id && 
  b.data.author === book.data.author
).slice(0, 6);

// Get testimonials if available
const testimonials = await getCollection('testimonials');
const bookTestimonials = testimonials.filter(t => 
  t.data.bookTitle === book.data.title
);

// Calculate reading time (rough estimate: 250 words per minute)
const estimatedReadingTime = book.data.wordCount 
  ? Math.round((book.data.wordCount / 250) / 60) // Convert to hours
  : null;

// Resolve names for display with links
const currentSpecies = book.data.species || book.data.alienSpecies || [];
const speciesData = currentSpecies.length > 0
  ? await Promise.all(currentSpecies.map(async slug => ({
      slug: slug,
      name: await getSpeciesName(slug)
    })))
  : [];

const settingNames = book.data.setting 
  ? await Promise.all(book.data.setting.map(slug => getLocationName(slug)))
  : [];

const genreNames = book.data.genres 
  ? book.data.genres.map(genre => formatGenreName(genre))
  : [];
---

<Layout title={`${book.data.title} - ${SITE_TITLE}`}>
  <Header />
  
  <main class="min-h-screen bg-bg-primary">
    <!-- Book Hero Section -->
    <section class="relative py-16 bg-gradient-to-br from-deep-space-navy via-nebula-purple to-deep-space-navy overflow-hidden">
      <!-- Cosmic Background Elements -->
      <div class="absolute inset-0 bg-starfield opacity-20 animate-starfield"></div>
      <div class="absolute inset-0 bg-gradient-to-t from-deep-space-navy/50 to-transparent"></div>
      
      <div class="container mx-auto px-4 relative z-10">
        <div class="max-w-6xl mx-auto">
          <!-- Breadcrumb -->
          <nav class="mb-8" aria-label="Breadcrumb">
            <ol class="flex items-center space-x-2 text-sm text-solar-white/60">
              <li><a href="/" class="hover:text-solar-white transition-colors">Home</a></li>
              <li class="text-solar-white/40">›</li>
              <li><a href="/books" class="hover:text-solar-white transition-colors">Books</a></li>
              {book.data.series && (
                <>
                  <li class="text-solar-white/40">›</li>
                  <li><a href={`/series/${getSeriesSlug(book.data.series) || book.data.series.toLowerCase().replace(/\s+/g, '-')}`} class="hover:text-solar-white transition-colors">{book.data.series}</a></li>
                </>
              )}
              <li class="text-solar-white/40">›</li>
              <li class="text-solar-white">{book.data.title}</li>
            </ol>
          </nav>

          <div class="grid grid-cols-1 lg:grid-cols-3 gap-12 items-start">
            <!-- Book Cover & Purchase Options -->
            <div class="lg:col-span-1">
              <div class="sticky top-8">
                {book.data.cover && (
                  <div class="mb-6">
                    <Image 
                      src={book.data.cover} 
                      alt={`${book.data.title} book cover`}
                      class="w-full max-w-sm mx-auto rounded-xl shadow-2xl hover:scale-105 transition-transform duration-300"
                      width={400}
                      height={600}
                    />
                  </div>
                )}
                
                <!-- Purchase Options -->
                <div class="space-y-4 mb-6">
                  {book.data.isKU && (
                    <a 
                      href={book.data.amazonUrl || '#'}
                      class="btn btn-primary btn-lg w-full"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      📖 Read FREE on Kindle Unlimited
                    </a>
                  )}
                  
                  {book.data.amazonUrl && (
                    <a 
                      href={book.data.amazonUrl}
                      class="btn btn-secondary btn-lg w-full"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      🛒 Buy on Amazon {book.data.price && `(${book.data.price})`}
                    </a>
                  )}
                  
                  {book.data.goodreadsUrl && (
                    <a 
                      href={book.data.goodreadsUrl}
                      class="btn btn-outline btn-lg w-full"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      📚 Add to Goodreads
                    </a>
                  )}
                </div>

                <!-- Book Details -->
                <div class="bg-solar-white/10 backdrop-blur-sm rounded-xl p-6 border border-cosmic-rose/30">
                  <h3 class="text-lg font-bold text-solar-white mb-4">Book Details</h3>
                  <div class="space-y-3 text-sm">
                    {book.data.series && (
                      <div class="flex justify-between">
                        <span class="text-solar-white/70">Series:</span>
                        <span class="text-stellar-gold font-medium">
                          <a href={`/series/${getSeriesSlug(book.data.series) || book.data.series.toLowerCase().replace(/\s+/g, '-')}`} class="hover:underline">
                            {book.data.series}
                          </a>
                        </span>
                      </div>
                    )}
                    {book.data.seriesOrder && (
                      <div class="flex justify-between">
                        <span class="text-solar-white/70">Book #:</span>
                        <span class="text-solar-white font-medium">{book.data.seriesOrder}</span>
                      </div>
                    )}
                    <div class="flex justify-between">
                      <span class="text-solar-white/70">Published:</span>
                      <span class="text-solar-white font-medium">
                        {new Date(book.data.pubDate).toLocaleDateString('en-US', {
                          year: 'numeric',
                          month: 'long',
                          day: 'numeric'
                        })}
                      </span>
                    </div>
                    {book.data.pageCount && (
                      <div class="flex justify-between">
                        <span class="text-solar-white/70">Pages:</span>
                        <span class="text-solar-white font-medium">{book.data.pageCount}</span>
                      </div>
                    )}
                    {book.data.wordCount && (
                      <div class="flex justify-between">
                        <span class="text-solar-white/70">Word Count:</span>
                        <span class="text-solar-white font-medium">{book.data.wordCount.toLocaleString()}</span>
                      </div>
                    )}
                    {estimatedReadingTime && (
                      <div class="flex justify-between">
                        <span class="text-solar-white/70">Reading Time:</span>
                        <span class="text-solar-white font-medium">~{estimatedReadingTime}h</span>
                      </div>
                    )}
                    <div class="flex justify-between">
                      <span class="text-solar-white/70">Heat Level:</span>
                      <span class="text-stellar-gold font-medium capitalize">{book.data.heatLevel}</span>
                    </div>
                    {book.data.rating > 0 && (
                      <div class="flex justify-between">
                        <span class="text-solar-white/70">Rating:</span>
                        <span class="text-solar-white font-medium">
                          {book.data.rating.toFixed(1)} ⭐ ({book.data.ratingCount?.toLocaleString() || 0})
                        </span>
                      </div>
                    )}
                  </div>
                  
                  {/* Tags/Categories */}
                  <div class="mt-6 pt-4 border-t border-solar-white/20">
                    {speciesData.length > 0 && (
                      <div class="mb-3">
                        <h4 class="text-sm font-medium text-solar-white mb-2">Species:</h4>
                        <div class="flex flex-wrap gap-2">
                          {speciesData.map((species) => (
                            <a 
                              href={`/species/${species.slug}`}
                              class="badge badge-primary text-xs hover:badge-secondary transition-colors"
                              key={species.slug}
                            >
                              {species.name}
                            </a>
                          ))}
                        </div>
                      </div>
                    )}
                    
                    {settingNames.length > 0 && (
                      <div class="mb-3">
                        <h4 class="text-sm font-medium text-solar-white mb-2">Setting:</h4>
                        <div class="flex flex-wrap gap-2">
                          {settingNames.map((settingName, index) => (
                            <span class="badge badge-secondary text-xs" key={index}>
                              {settingName}
                            </span>
                          ))}
                        </div>
                      </div>
                    )}
                    
                    {genreNames.length > 0 && (
                      <div>
                        <h4 class="text-sm font-medium text-solar-white mb-2">Genres:</h4>
                        <div class="flex flex-wrap gap-2">
                          {genreNames.map((genreName, index) => (
                            <span class="badge badge-outline text-xs" key={index}>
                              {genreName}
                            </span>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>

            <!-- Book Information -->
            <div class="lg:col-span-2">
              <div class="space-y-8">
                <div>
                  <h1 class="text-4xl md:text-5xl font-primary font-bold text-solar-white mb-4">
                    <span class="bg-gradient-aurora bg-clip-text text-transparent">
                      {book.data.title}
                    </span>
                  </h1>
                  
                  <div class="text-lg text-stellar-gold font-medium mb-6">
                    by {book.data.author}
                    {book.data.series && book.data.seriesOrder && (
                      <span class="text-solar-white/60"> • Book {book.data.seriesOrder} of {book.data.series}</span>
                    )}
                  </div>
                  
                  <div class="text-xl text-solar-white/90 leading-relaxed max-w-none space-y-6">
                    <div class="prose prose-xl max-w-none [&>h1]:text-3xl [&>h1]:font-primary [&>h1]:font-bold [&>h1]:bg-gradient-aurora [&>h1]:bg-clip-text [&>h1]:text-transparent [&>h1]:mb-4 [&>h2]:text-2xl [&>h2]:font-primary [&>h2]:font-bold [&>h2]:text-stellar-gold [&>h2]:mb-4 [&>h2]:mt-8 [&>p]:text-lg [&>p]:text-solar-white/90 [&>p]:leading-relaxed [&>p]:mb-4 [&>ul]:space-y-3 [&>ul]:ml-6 [&>ul>li]:text-solar-white/90 [&>ul>li]:leading-relaxed [&>ul>li]:relative [&>ul>li]:pl-6 [&>ul>li]:before:content-['✨'] [&>ul>li]:before:absolute [&>ul>li]:before:left-0 [&>ul>li]:before:text-stellar-gold [&>strong]:text-stellar-gold [&>strong]:font-semibold">
                      <Content />
                    </div>
                  </div>
                </div>

                <!-- Social Sharing -->
                <div class="flex items-center space-x-4 py-4 border-y border-solar-white/20">
                  <span class="text-solar-white/70 text-sm">Share:</span>
                  <div class="flex space-x-3">
                    <!-- Twitter/X Share -->
                    <a 
                      href={`https://twitter.com/intent/tweet?text=Check out "${book.data.title}" by ${book.data.author}&url=${encodeURIComponent(`https://danegriggs.com/books/${book.id}`)}`}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-solar-white/60 hover:text-blue-400 transition-colors"
                      aria-label="Share on Twitter"
                    >
                      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
                      </svg>
                    </a>
                    
                    <!-- Facebook Share -->
                    <a 
                      href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(`https://danegriggs.com/books/${book.id}`)}`}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-solar-white/60 hover:text-blue-600 transition-colors"
                      aria-label="Share on Facebook"
                    >
                      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                      </svg>
                    </a>
                    
                    <!-- Instagram Link -->
                    <a 
                      href="https://instagram.com/danegriggsauthor"
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-solar-white/60 hover:text-pink-500 transition-colors"
                      aria-label="Follow on Instagram"
                    >
                      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
                      </svg>
                    </a>
                    
                    <!-- TikTok Link -->
                    <a 
                      href="https://tiktok.com/@danegriggsauthor"
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-solar-white/60 hover:text-black transition-colors"
                      aria-label="Follow on TikTok"
                    >
                      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12.525.02c1.31-.02 2.61-.01 3.91-.02.08 1.53.63 3.09 1.75 4.17 1.12 1.11 2.7 1.62 4.24 1.79v4.03c-1.44-.05-2.89-.35-4.2-.97-.57-.26-1.1-.59-1.62-.93-.01 2.92.01 5.84-.02 8.75-.08 1.4-.54 2.79-1.35 3.94-1.31 1.92-3.58 3.17-5.91 3.21-1.43.08-2.86-.31-4.08-1.03-2.02-1.19-3.44-3.37-3.65-5.71-.02-.5-.03-1-.01-1.49.18-1.9 1.12-3.72 2.58-4.96 1.66-1.44 3.98-2.13 6.15-1.72.02 1.48-.04 2.96-.04 4.44-.99-.32-2.15-.23-3.02.37-.63.41-1.11 1.04-1.36 1.75-.21.51-.15 1.07-.14 1.61.24 1.64 1.82 3.02 3.5 2.87 1.12-.01 2.19-.66 2.77-1.61.19-.33.4-.67.41-1.06.1-1.79.06-3.57.07-5.36.01-4.03-.01-8.05.02-12.07z"/>
                      </svg>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>


    <!-- Reader Reviews -->
    {bookTestimonials.length > 0 && (
      <section class="py-16 bg-bg-secondary">
        <div class="container mx-auto px-4">
          <div class="text-center mb-12">
            <h2 class="text-3xl md:text-4xl font-primary font-bold text-deep-space-navy mb-4">
              What Readers Are Saying
            </h2>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto">
            {bookTestimonials.slice(0, 6).map((testimonial) => (
              <div class="bg-white rounded-xl p-6 shadow-lg">
                <div class="flex items-center mb-4">
                  <div class="flex text-stellar-gold">
                    {Array.from({ length: testimonial.data.rating }, (_, i) => (
                      <svg key={i} class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                      </svg>
                    ))}
                  </div>
                  {testimonial.data.verified && (
                    <span class="ml-2 text-xs bg-green-100 text-green-800 px-2 py-1 rounded">
                      Verified Purchase
                    </span>
                  )}
                </div>
                <blockquote class="text-gray-700 mb-4">
                  "{testimonial.data.quote}"
                </blockquote>
                <div class="text-sm text-gray-600">
                  — {testimonial.data.reviewerName}
                  <span class="capitalize ml-1">({testimonial.data.reviewerPlatform})</span>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- More from This Series -->
    {seriesBooks.length > 0 && (
      <section class="py-16 bg-white">
        <div class="container mx-auto px-4">
          <div class="text-center mb-12">
            <h2 class="text-3xl md:text-4xl font-primary font-bold text-deep-space-navy mb-4">
              More from {book.data.series}
            </h2>
            <p class="text-lg text-gray-600">
              Continue the adventure in this interconnected series
            </p>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            {seriesBooks.slice(0, 4).map((seriesBook) => (
              <BookCard 
                book={seriesBook}
                variant="standard"
                client:load
              />
            ))}
          </div>
          
          {seriesBooks.length > 4 && (
            <div class="text-center mt-8">
              <a 
                href={`/series/${getSeriesSlug(book.data.series!) || book.data.series?.toLowerCase().replace(/\s+/g, '-')}`}
                class="btn btn-primary btn-lg"
              >
                View Full Series
              </a>
            </div>
          )}
        </div>
      </section>
    )}

    <!-- Similar Books -->
    {similarBooks.length > 0 && (
      <section class="py-16 bg-bg-secondary">
        <div class="container mx-auto px-4">
          <div class="text-center mb-12">
            <h2 class="text-3xl md:text-4xl font-primary font-bold text-deep-space-navy mb-4">
              Readers Also Enjoyed
            </h2>
            <p class="text-lg text-gray-600">
              Books featuring similar alien species and themes
            </p>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            {similarBooks.map((similarBook) => (
              <BookCard 
                book={similarBook}
                variant="standard"
                client:load
              />
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Newsletter CTA -->
    <section class="py-16 bg-gradient-cosmic text-solar-white">
      <div class="container mx-auto px-4 text-center">
        <div class="max-w-3xl mx-auto">
          <h2 class="text-3xl md:text-4xl font-primary font-bold mb-4">
            Loved This Book?
          </h2>
          <p class="text-xl mb-8 text-solar-white/90">
            Join my newsletter for exclusive content, early access to new releases, and behind-the-scenes insights into alien world-building.
          </p>
          
          <button class="btn btn-secondary btn-lg px-8 py-4 text-lg">
            Get More Cosmic Romance
          </button>
        </div>
      </div>
    </section>
  </main>

  <Footer />
</Layout>