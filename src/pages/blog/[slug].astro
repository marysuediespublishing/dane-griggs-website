---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';

// Get the slug from URL params
const { slug } = Astro.params;

// Fetch all blog posts and find the one matching the slug
const allBlogPosts = await getCollection('blog');
const post = allBlogPosts.find(p => p.id === slug);

// Handle post not found - return 404
if (!post) {
  return Astro.redirect('/404');
}

const { Content } = await render(post);

// Get all posts sorted chronologically (oldest to newest) for navigation
const allPosts = allBlogPosts.sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);

// Find current post index
const currentIndex = allPosts.findIndex(p => p.id === post.id);

// Determine previous (older) and next (newer) posts
const previousPost = currentIndex > 0 ? allPosts[currentIndex - 1] : null;
const nextPost = currentIndex < allPosts.length - 1 ? allPosts[currentIndex + 1] : null;
---

<BlogPost {...post.data} previousPost={previousPost} nextPost={nextPost}>
	<Content />
</BlogPost>
